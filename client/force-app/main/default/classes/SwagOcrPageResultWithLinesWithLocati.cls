/*
 * ocrapi
 * The powerful Optical Character Recognition (OCR) APIs let you convert scanned images of pages into recognized text.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * OCR results of a page, including lines of text and their location
 */
public class SwagOcrPageResultWithLinesWithLocati implements Swagger.MappedProperties {
    /**
     * Page number of the page that was OCR-ed, starting with 1 for the first page in the PDF file
     * @return pageNumber
     */
    public Integer pageNumber { get; set; }

    /**
     * True if successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Word elements in the image
     * @return lines
     */
    public List<SwagOcrLineElement> lines { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'PageNumber' => 'pageNumber',
        'Successful' => 'successful',
        'Lines' => 'lines'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagOcrPageResultWithLinesWithLocati() {
        lines = new List<SwagOcrLineElement>();
    }

    public static SwagOcrPageResultWithLinesWithLocati getExample() {
        SwagOcrPageResultWithLinesWithLocati ocrPageResultWithLinesWithLocation = new SwagOcrPageResultWithLinesWithLocati();
        ocrPageResultWithLinesWithLocation.pageNumber = 123;
        ocrPageResultWithLinesWithLocation.successful = true;
        ocrPageResultWithLinesWithLocation.lines = new List<SwagOcrLineElement>{SwagOcrLineElement.getExample()};
        return ocrPageResultWithLinesWithLocation;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagOcrPageResultWithLinesWithLocati) {
            SwagOcrPageResultWithLinesWithLocati ocrPageResultWithLinesWithLocation = (SwagOcrPageResultWithLinesWithLocati) obj;
            return this.pageNumber == ocrPageResultWithLinesWithLocation.pageNumber
                && this.successful == ocrPageResultWithLinesWithLocation.successful
                && this.lines == ocrPageResultWithLinesWithLocation.lines;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (pageNumber == null ? 0 : System.hashCode(pageNumber));
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (lines == null ? 0 : System.hashCode(lines));
        return hashCode;
    }
}

