/*
 * ocrapi
 * The powerful Optical Character Recognition (OCR) APIs let you convert scanned images of pages into recognized text.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of an image to words-with-location OCR operation
 */
public class SwagImageToWordsWithLocationResult implements Swagger.MappedProperties {
    /**
     * True if successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Word elements in the image
     * @return words
     */
    public List<SwagOcrWordElement> words { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'Words' => 'words'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagImageToWordsWithLocationResult() {
        words = new List<SwagOcrWordElement>();
    }

    public static SwagImageToWordsWithLocationResult getExample() {
        SwagImageToWordsWithLocationResult imageToWordsWithLocationResult = new SwagImageToWordsWithLocationResult();
        imageToWordsWithLocationResult.successful = true;
        imageToWordsWithLocationResult.words = new List<SwagOcrWordElement>{SwagOcrWordElement.getExample()};
        return imageToWordsWithLocationResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagImageToWordsWithLocationResult) {
            SwagImageToWordsWithLocationResult imageToWordsWithLocationResult = (SwagImageToWordsWithLocationResult) obj;
            return this.successful == imageToWordsWithLocationResult.successful
                && this.words == imageToWordsWithLocationResult.words;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (words == null ? 0 : System.hashCode(words));
        return hashCode;
    }
}

