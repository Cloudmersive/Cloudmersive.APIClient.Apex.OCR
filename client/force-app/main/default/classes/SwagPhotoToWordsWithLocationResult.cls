/*
 * ocrapi
 * The powerful Optical Character Recognition (OCR) APIs let you convert scanned images of pages into recognized text.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of an photo to words-with-location OCR operation
 */
public class SwagPhotoToWordsWithLocationResult implements Swagger.MappedProperties {
    /**
     * True if successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Word elements in the image
     * @return textElements
     */
    public List<SwagOcrPhotoTextElement> textElements { get; set; }

    /**
     * Typically null.  To analyze OCR performance, enable diagnostic mode by adding the HTTP header "DiagnosticMode" with the value "true".  When this is true, a diagnostic image showing the details of the OCR result will be set in PNG format into DiagnosticImage.
     * @return diagnosticImage
     */
    public Blob diagnosticImage { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'TextElements' => 'textElements',
        'DiagnosticImage' => 'diagnosticImage'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagPhotoToWordsWithLocationResult() {
        textElements = new List<SwagOcrPhotoTextElement>();
    }

    public static SwagPhotoToWordsWithLocationResult getExample() {
        SwagPhotoToWordsWithLocationResult photoToWordsWithLocationResult = new SwagPhotoToWordsWithLocationResult();
        photoToWordsWithLocationResult.successful = true;
        photoToWordsWithLocationResult.textElements = new List<SwagOcrPhotoTextElement>{SwagOcrPhotoTextElement.getExample()};
        photoToWordsWithLocationResult.diagnosticImage = EncodingUtil.base64Decode('VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2cu');
        return photoToWordsWithLocationResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagPhotoToWordsWithLocationResult) {
            SwagPhotoToWordsWithLocationResult photoToWordsWithLocationResult = (SwagPhotoToWordsWithLocationResult) obj;
            return this.successful == photoToWordsWithLocationResult.successful
                && this.textElements == photoToWordsWithLocationResult.textElements
                && this.diagnosticImage == photoToWordsWithLocationResult.diagnosticImage;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (textElements == null ? 0 : System.hashCode(textElements));
        hashCode = (17 * hashCode) + (diagnosticImage == null ? 0 : System.hashCode(diagnosticImage));
        return hashCode;
    }
}

