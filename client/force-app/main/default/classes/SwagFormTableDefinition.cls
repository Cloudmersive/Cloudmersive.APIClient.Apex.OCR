/*
 * ocrapi
 * The powerful Optical Character Recognition (OCR) APIs let you convert scanned images of pages into recognized text.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Definition of a form table for OCR data extraction from images
 */
public class SwagFormTableDefinition implements Swagger.MappedProperties {
    /**
     * Optional; the ID of the table
     * @return tableID
     */
    public String tableID { get; set; }

    /**
     * Definition of the columns in the table
     * @return columnDefinitions
     */
    public List<SwagFormTableColumnDefinition> columnDefinitions { get; set; }

    /**
     * Optional - scale factor for target table height - relative to maximum height of headers of columns
     * @return targetTableHeightRelative
     */
    public Double targetTableHeightRelative { get; set; }

    /**
     * Optional - scale factor for target row height - relative to height of column header
     * @return targetRowHeightRelative
     */
    public Double targetRowHeightRelative { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'TableID' => 'tableID',
        'ColumnDefinitions' => 'columnDefinitions',
        'TargetTableHeight_Relative' => 'targetTableHeightRelative',
        'TargetRowHeight_Relative' => 'targetRowHeightRelative'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagFormTableDefinition() {
        columnDefinitions = new List<SwagFormTableColumnDefinition>();
    }

    public static SwagFormTableDefinition getExample() {
        SwagFormTableDefinition formTableDefinition = new SwagFormTableDefinition();
        formTableDefinition.tableID = 'aeiou';
        formTableDefinition.columnDefinitions = new List<SwagFormTableColumnDefinition>{SwagFormTableColumnDefinition.getExample()};
        formTableDefinition.targetTableHeightRelative = 1.3579;
        formTableDefinition.targetRowHeightRelative = 1.3579;
        return formTableDefinition;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagFormTableDefinition) {
            SwagFormTableDefinition formTableDefinition = (SwagFormTableDefinition) obj;
            return this.tableID == formTableDefinition.tableID
                && this.columnDefinitions == formTableDefinition.columnDefinitions
                && this.targetTableHeightRelative == formTableDefinition.targetTableHeightRelative
                && this.targetRowHeightRelative == formTableDefinition.targetRowHeightRelative;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (tableID == null ? 0 : System.hashCode(tableID));
        hashCode = (17 * hashCode) + (columnDefinitions == null ? 0 : System.hashCode(columnDefinitions));
        hashCode = (17 * hashCode) + (targetTableHeightRelative == null ? 0 : System.hashCode(targetTableHeightRelative));
        hashCode = (17 * hashCode) + (targetRowHeightRelative == null ? 0 : System.hashCode(targetRowHeightRelative));
        return hashCode;
    }
}

